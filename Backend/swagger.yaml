swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /accounts/{account_id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Get account transactions
      description: API to retrieve transactions for a specific account
      produces:
        - application/json
      parameters:
        - name: "account_id"
          in: "path"
          description: "ID of the account"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/AccountTransactionsResponse"
        "400":
          description: Invalid Request
        "500":
          description: Internal Server Error
  /accounts/{account_id}/transactions/{transaction_id}:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Get transaction details
      description: API to retrieve details for a specific transaction
      produces:
        - application/json
      parameters:
        - name: "account_id"
          in: "path"
          description: "ID of the account"
          required: true
          type: "integer"
          format: "int64"
        - name: "transaction_id"
          in: "path"
          description: "ID of the transaction"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetailsResponse"
        "400":
          description: Invalid Request
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Edit transaction details
      description: API to edit details for a specific transaction
      parameters:
        - in: body
          name: body
          description: Edit transaction details
          required: true
          schema:
            $ref: "#/definitions/TransactionDetails"
        - name: "account_id"
          in: "path"
          description: "ID of the account"
          required: true
          type: "integer"
          format: "int64"
        - name: "transaction_id"
          in: "path"
          description: "ID of the transaction"
          required: true
          type: "integer"
          format: "int64"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetailsResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  AccountTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          properties:
            id:
              type: string
              description: transaction id
            date:
              type: string
              format: date-time
              description: transaction date
            description:
              type: string
              description: transaction description
            amount:
              type: number
              description: transaction amount
            balance:
              type: number
              description: account balance
  TransactionDetails:
    type: object
    properties:
      category:
        type: string
        description: transaction category
        enum:
          - food
          - entertainment
          - rent
          - credit
          - vehicle
          - transportation
          - care
      note:
        type: string
        description: transaction note
  TransactionDetailsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          type:
            type: string
            description: transaction type
          category:
            type: string
            description: transaction category
            enum:
              - food
              - entertainment
              - rent
              - credit
              - vehicle
              - transportation
              - care
          note:
            type: string
            description: transaction note
